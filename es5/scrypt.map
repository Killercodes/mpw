{"version":3,"file":"/home/tom/git/mpw-js/es5/scrypt.js","sources":["/home/tom/git/mpw-js/scrypt.js","@traceur/generated/TemplateParser/0"],"names":[],"mappings":"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","sourceRoot":"/home/tom/git/mpw-js/es5/","sourcesContent":["/*! by Tom Thorogood <me@tomthorogood.co.uk> */\n/*! This work is licensed under the Creative Commons Attribution 4.0\nInternational License. To view a copy of this license, visit\nhttp://creativecommons.org/licenses/by/4.0/ or see LICENSE. */\n\nwindow.scrypt = function () {\n\t// https://github.com/golang/crypto/blob/master/scrypt/scrypt.go\n\tfunction salsaXOR(tmp, inp, out) {\n\t\tlet w = [ ];\n\t\tlet x = [ ];\n\t\t\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\tx[i] = w[i] = tmp[i] ^ inp[i];\n\t\t}\n\t\t\n\t\tfor (let i = 0, u; i < 8; i += 2) {\n\t\t\tu = x[0]  + x[12]; x[4]  ^= (u << 7)  | (u >>> (32 - 7));\n\t\t\tu = x[4]  + x[0];  x[8]  ^= (u << 9)  | (u >>> (32 - 9));\n\t\t\tu = x[8]  + x[4];  x[12] ^= (u << 13) | (u >>> (32 - 13));\n\t\t\tu = x[12] + x[8];  x[0]  ^= (u << 18) | (u >>> (32 - 18));\n\t\t\t\n\t\t\tu = x[5]  + x[1];  x[9]  ^= (u << 7)  | (u >>> (32 - 7));\n\t\t\tu = x[9]  + x[5];  x[13] ^= (u << 9)  | (u >>> (32 - 9));\n\t\t\tu = x[13] + x[9];  x[1]  ^= (u << 13) | (u >>> (32 - 13));\n\t\t\tu = x[1]  + x[13]; x[5]  ^= (u << 18) | (u >>> (32 - 18));\n\t\t\t\n\t\t\tu = x[10] + x[6];  x[14] ^= (u << 7)  | (u >>> (32 - 7));\n\t\t\tu = x[14] + x[10]; x[2]  ^= (u << 9)  | (u >>> (32 - 9));\n\t\t\tu = x[2]  + x[14]; x[6]  ^= (u << 13) | (u >>> (32 - 13));\n\t\t\tu = x[6]  + x[2];  x[10] ^= (u << 18) | (u >>> (32 - 18));\n\t\t\t\n\t\t\tu = x[15] + x[11]; x[3]  ^= (u << 7)  | (u >>> (32 - 7));\n\t\t\tu = x[3]  + x[15]; x[7]  ^= (u << 9)  | (u >>> (32 - 9));\n\t\t\tu = x[7]  + x[3];  x[11] ^= (u << 13) | (u >>> (32 - 13));\n\t\t\tu = x[11] + x[7];  x[15] ^= (u << 18) | (u >>> (32 - 18));\n\t\t\t\n\t\t\tu = x[0] + x[3]; x[1] ^= (u << 7)  | (u >>> (32 - 7));\n\t\t\tu = x[1] + x[0]; x[2] ^= (u << 9)  | (u >>> (32 - 9));\n\t\t\tu = x[2] + x[1]; x[3] ^= (u << 13) | (u >>> (32 - 13));\n\t\t\tu = x[3] + x[2]; x[0] ^= (u << 18) | (u >>> (32 - 18));\n\t\t\t\n\t\t\tu = x[5] + x[4]; x[6] ^= (u << 7)  | (u >>> (32 - 7));\n\t\t\tu = x[6] + x[5]; x[7] ^= (u << 9)  | (u >>> (32 - 9));\n\t\t\tu = x[7] + x[6]; x[4] ^= (u << 13) | (u >>> (32 - 13));\n\t\t\tu = x[4] + x[7]; x[5] ^= (u << 18) | (u >>> (32 - 18));\n\t\t\t\n\t\t\tu = x[10] + x[9];  x[11] ^= (u << 7)  | (u >>> (32 - 7));\n\t\t\tu = x[11] + x[10]; x[8]  ^= (u << 9)  | (u >>> (32 - 9));\n\t\t\tu = x[8]  + x[11]; x[9]  ^= (u << 13) | (u >>> (32 - 13));\n\t\t\tu = x[9]  + x[8];  x[10] ^= (u << 18) | (u >>> (32 - 18));\n\t\t\t\n\t\t\tu = x[15] + x[14]; x[12] ^= (u << 7)  | (u >>> (32 - 7));\n\t\t\tu = x[12] + x[15]; x[13] ^= (u << 9)  | (u >>> (32 - 9));\n\t\t\tu = x[13] + x[12]; x[14] ^= (u << 13) | (u >>> (32 - 13));\n\t\t\tu = x[14] + x[13]; x[15] ^= (u << 18) | (u >>> (32 - 18));\n\t\t}\n\t\t\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\tout[i] = tmp[i] = x[i] + w[i];\n\t\t}\n\t}\n\t\n\tfunction blockMix(inp, out, r) {\n\t\tlet tmp = inp.slice((2 * r - 1) * 16, (2 * r) * 16);\n\t\t\n\t\tfor (let i = 0; i < 2 * r; i += 2) {\n\t\t\tsalsaXOR(tmp, inp.subarray(i * 16), out.subarray(i * 8));\n\t\t\tsalsaXOR(tmp, inp.subarray((i + 1) * 16), out.subarray((i + 2 * r) * 8));\n\t\t}\n\t}\n\t\n\tfunction smix(b, r, N, v, x, y) {\n\t\tlet bView = new DataView(b.buffer, b.byteOffset, b.byteLength);\n\t\t\n\t\tfor (let i = 0, j = 0; i < x.length; i++, j += 4) {\n\t\t\tx[i] = bView.getUint32(j, true/*little-endian*/);\n\t\t}\n\t\t\n\t\tfor (let i = 0; i < N; i += 2) {\n\t\t\tv.set(x, i * 32 * r);\n\t\t\tblockMix(x, y, r);\n\t\t\t\n\t\t\tv.set(y, (i + 1) * 32 * r);\n\t\t\tblockMix(y, x, r);\n\t\t}\n\t\t\n\t\tfor (let i = 0, j, sh32 = Math.pow(2, 32); i < N; i += 2) {\n\t\t\tj = (x[(2 * r - 1) * 16] | (x[(2 * r - 1) * 16 + 1] * sh32)) & (N - 1);\n\t\t\t\n\t\t\tfor (let k = 0; k < x.length; k++) {\n\t\t\t\tx[k] ^= v[j * 32 * r + k];\n\t\t\t}\n\t\t\t\n\t\t\tblockMix(x, y, r);\n\t\t\t\n\t\t\tj = (y[(2 * r - 1) * 16] | (y[(2 * r - 1) * 16 + 1] * sh32)) & (N - 1);\n\t\t\t\n\t\t\tfor (let k = 0; k < y.length; k++) {\n\t\t\t\ty[k] ^= v[j * 32 * r + k];\n\t\t\t}\n\t\t\t\n\t\t\tblockMix(y, x, r);\n\t\t}\n\t\t\n\t\tfor (let i = 0, j = 0; i < x.length; i++, j += 4) {\n\t\t\tbView.setUint32(j, x[i], true/*little-endian*/);\n\t\t}\n\t}\n\t\n\treturn function (passphrase, salt, N, r, p, keyLen) {\n\t\tif (r * p >= Math.pow(2, 30)) {\n\t\t\treturn Promise.reject(new Error(\"Parameters r and p are too large\"));\n\t\t}\n\t\t\n\t\tif (N < 2 || N & (N - 1) != 0 || N > Number.MAX_SAFE_INTEGER) {\n\t\t\treturn Promise.reject(new Error(\"Argument N is invalid; N must be > 1, a power of 2 and less than 2^53\"));\n\t\t}\n\t\t\n\t\tlet x = new Uint32Array(32 * r);\n\t\tlet y = new Uint32Array(32 * r);\n\t\tlet v = new Uint32Array(32 * N * r);\n\t\t\n\t\tlet b = pbkdf2(passphrase, salt, 1, p * 128 * r, \"SHA-256\");\n\t\t\n\t\tfor (let i = 0; i < p; i++) {\n\t\t\t// setImmediate (a 0-delay setTimeout of sorts) is needed\n\t\t\t// here so that this code is asynchronous and will not block\n\t\t\t// the UI thread\n\t\t\tb = b.then(b => new Promise((resolve, reject) => window.setImmediate(() => (smix(b.subarray(i * 128 * r), r, N, v, x, y), resolve(b)))));\n\t\t}\n\t\t\n\t\treturn b.then(b => pbkdf2(passphrase, b, 1, keyLen, \"SHA-256\"));\n\t};\n}();","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]"]}