{"version":3,"sources":["../setImmediate-polyfill.js"],"names":[],"mappings":"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","file":"setImmediate-polyfill.js","sourcesContent":["/*! by Tom Thorogood <me@tomthorogood.co.uk> */\n/*! This work is licensed under the Creative Commons Attribution 4.0\nInternational License. To view a copy of this license, visit\nhttp://creativecommons.org/licenses/by/4.0/ or see LICENSE. */\n\n// setImmediate is a 0-delay setTimeout of sorts introduced\n// by MS and wrongly held back by other browsers\nwindow.setImmediate || !function (global) {\n\t// Get the global prototype to attach setImmediate to\n\tlet attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t\n\t// If we couldn't get the prototype or setTimeout wasn't attached\n\t// to the prototype we just attach to global\n\tattachTo && attachTo.setTimeout || (attachTo = global);\n\t\n\t// If the MS prefixed implementation exists, use it\n\tif (global.msSetImmediate) {\n\t\treturn attachTo.setImmediate = global.msSetImmediate, attachTo.clearImmediate = global.msClearImmediate;\n\t}\n\t\n\t// https://github.com/YuzuJS/setImmediate/blob/master/setImmediate.js\n\t// This checks if the current environment is Node.js\n\tif (global.process && Object.prototype.toString(global.process) === \"[object process]\") {\n\t\t// If it is we might be able to use timers\n\t\tlet timers = global.require(\"timers\");\n\t\t\n\t\t// If it implements setImmediate we use it\n\t\tif (timers && timers.setImmediate) {\n\t\t\treturn attachTo.setImmediate = timers.setImmediate, attachTo.clearImmediate = timers.clearImmediate;\n\t\t}\n\t\t\n\t\t// If it isn't we polyfill with nextTick which is\n\t\t// sufficiently similar\n\t\tif (global.process.nextTick) {\n\t\t\treturn attachTo.setImmediate = function (func, ...params) {\n\t\t\t\t// Invoke func with the params as passed into setImmediate\n\t\t\t\tglobal.process.nextTick(() => func(...params));\n\t\t\t}, attachTo.clearImmediate = function (immediateID) {\n\t\t\t\t// There is no id or way to stop nextTick\n\t\t\t\tthrow new Error(\"clearImmediate not implemented\");\n\t\t\t};\n\t\t}\n\t}\n\t\n\t// http://dbaron.org/log/20100309-faster-timeouts\n\t// https://github.com/YuzuJS/setImmediate/blob/master/setImmediate.js\n\t// https://github.com/kriskowal/q/blob/0428c15d2ffc8e874b4be3a50e92884ef8701a6f/q.js#L125-141\n\t// If we have messaging channels, or we have postMessage and this\n\t// isn't a WebWorker, we can use messaging\n\tif (global.MessageChannel || global.postMessage && !global.importScripts && (function () {\n\t\t// This checks if global.postMessage is asynchronous,\n\t\t// it has been known to be buggy and synchronous in\n\t\t// some browsers\n\t\tlet postMessageIsAsynchronous = true;\n\t\tlet oldOnMessage = global.onmessage;\n\t\tglobal.onmessage = function () { postMessageIsAsynchronous = false; };\n\t\tglobal.postMessage(\"\", \"*\");\n\t\tglobal.onmessage = oldOnMessage;\n\t\treturn postMessageIsAsynchronous;\n\t})()) {\n\t\t// A unique id prefix to ensure that ONLY valid messages are accepted\n\t\tlet messageName = `setImmediate-polyfill-${Math.random()}`.replace(\"0.\", \"\");\n\t\t\n\t\t// The numeric identifier of the next dispatched scrypt call\n\t\tlet immediateID = 1;\n\t\t\n\t\t// The timeout function and arguments, indexed by numeric identifier\n\t\tlet timeouts = { };\n\t\t\n\t\t// If a MessageChannel exists we can use it to avoid sending\n\t\t// messages to the browser which could cause interoperability\n\t\t// issues\n\t\tlet channel = global.MessageChannel && new global.MessageChannel();\n\t\t\n\t\t// We need to start port1 in order to receive messages sent\n\t\t// from port2\n\t\tchannel && channel.port1.start();\n\t\t\n\t\t// Add a handler to the message event of either the message\n\t\t// channel, if it exists, or global if it does not\n\t\t(channel && channel.port1 || global).addEventListener(\"message\", function (event) {\n\t\t\t// If event data is not a string, i.e. doesn't implement split,\n\t\t\t// we didn't send it\n\t\t\tif (!event.data || !event.data.split) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// Split the identifier into the name and numeric id\n\t\t\tlet [name, immediateID] = event.data.split(\"$\");\n\t\t\t\n\t\t\t// If we are not using a MessageChannel check that the source\n\t\t\t// of the event was this window, also check the name is valid,\n\t\t\t// if either of these are not true, we didn't send it\n\t\t\tif (!channel && event.source !== global || name !== messageName) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// Prevent the event from propagating further\n\t\t\tevent.stopPropagation();\n\t\t\t\n\t\t\t// Retrieve the function and the arguments we will invoke\n\t\t\t// leaving func and params as null if the immediateID\n\t\t\t// does not exist in timeouts (because clearImmediate has\n\t\t\t// been called before we got here)\n\t\t\tlet [func, params] = timeouts[immediateID] || [ ];\n\t\t\t\n\t\t\t// Invoke the func with the appropriate parameters\n\t\t\tfunc && func(...params);\n\t\t\t\n\t\t\t// Clear func and params for GC\n\t\t\tfunc = params = null;\n\t\t\t\n\t\t\t// Remove key:immediateID from timeouts to ensure it's only\n\t\t\t// called once and to allow for GC\n\t\t\tdelete timeouts[immediateID];\n\t\t}, false);\n\t\t\n\t\treturn attachTo.setImmediate = function (func, ...params) {\n\t\t\t// Store the function and it's arguments in timeouts\n\t\t\ttimeouts[immediateID] = [func, params];\n\t\t\t\n\t\t\t// Post the message either using port2 of the MessageChannel\n\t\t\t// or on global if it's not available w/ the unique id\n\t\t\t// If the message is sent on global we dispatch it w/ a\n\t\t\t// targetOrigin of \"*\" (indicating no preference)\n\t\t\t(channel && channel.port2 || global).postMessage([messageName, immediateID].join(\"$\"), ...(channel ? [ ] : [\"*\"]));\n\t\t\t\n\t\t\t// We return a unique numeric id to identify the call\n\t\t\t// to setImmediate, this allows it to be cancelled\n\t\t\treturn immediateID++;\n\t\t}, attachTo.clearImmediate = function (immediateID) {\n\t\t\t// Delete the function and arguments associated\n\t\t\t// w/ identifier of immediateID\n\t\t\tdelete timeouts[immediateID];\n\t\t};\n\t}\n\t\n\t// Set setImmediate to prefixed or non-prefixed requestAnimationFrame\n\t// requestAnimationFrame dispatches at a later point in the event cycle\n\tattachTo.setImmediate = global.requestAnimationFrame || global.mozRequestAnimationFrame || global.webkitRequestAnimationFrame || global.msRequestAnimationFrame;\n\t\n\t// If requestAnimationFrame existed we end, setting clearImmediate\n\t// to cancelAnimationFrame\n\tif (attachTo.setImmediate) {\n\t\treturn attachTo.clearImmediate = global.cancelAnimationFrame || global.mozCancelAnimationFrame || global.webkitCancelAnimationFrame || global.msCancelAnimationFrame || global.webkitCancelRequestAnimationFrame;\n\t}\n\t\n\t// https://github.com/YuzuJS/setImmediate/blob/master/setImmediate.js\n\t// We can use a script tag and the readystatechange event on IE(?)\n\tif (global.document && \"onreadystatechange\" in global.document.getElementsByTagName(\"script\")[0]) {\n\t\t// The numeric identifier of the next dispatched scrypt call\n\t\tlet immediateID = 1;\n\t\t\n\t\t// A boolean value to allow clearImmediate to work,\n\t\t// indexed by numeric identifier\n\t\tlet timeouts = { };\n\t\t\n\t\treturn attachTo.setImmediate = function (func, ...params) {\n\t\t\t// Set true in timeouts for immediateID to indicate the func\n\t\t\t// should be invoked\n\t\t\ttimeouts[immediateID] = true;\n\t\t\t\n\t\t\t// Create a script tag that will be added to the DOM\n\t\t\tlet script = global.document.createElement(\"script\");\n\t\t\t\n\t\t\t// Add a handler for onreadystatechange\n\t\t\tscript.onreadystatechange = function () {\n\t\t\t\t// If the timeout has not been cancelled, call the func\n\t\t\t\t// w/ the arguments specified\n\t\t\t\ttimeouts[immediateID] && func(...params);\n\t\t\t\t\n\t\t\t\t// Remove key:immediateID from timeouts to ensure it's only called once \n\t\t\t\tdelete timeouts[immediateID];\n\t\t\t\t\n\t\t\t\t// Remove the handler to allow GC\n\t\t\t\tscript.onreadystatechange = null;\n\t\t\t\t\n\t\t\t\t// Remove the script tag from the DOM to ensure GC\n\t\t\t\tglobal.document.body.removeChild(script);\n\t\t\t\t\n\t\t\t\t// Nullify the script variable to allow GC\n\t\t\t\tscript = null;\n\t\t\t};\n\t\t\t\n\t\t\t// Add the script tag to the DOM to which begins loading\n\t\t\t// the tag which will invoke the readystatechange event\n\t\t\tglobal.document.body.appendChild(script);\n\t\t\t\n\t\t\t// Return a unique numeric id to identify the call\n\t\t\t// to setImmediate, this allows it to be cancelled\n\t\t\treturn immediateID++;\n\t\t}, attachTo.clearImmediate = function (immediateID) {\n\t\t\t// Remove key:immediateID from timeouts to prevent func from being called\n\t\t\tdelete timeouts[immediateID];\n\t\t};\n\t}\n\t\n\t// The worst fallback is setTimeout, although the delay is set to 0,\n\t// in reality this should have a ~20ms delay as this is an important\n\t// part of the spec\n\tattachTo.setImmediate = (func, ...params) => global.setTimeout(func, 0, ...params);\n\tattachTo.clearImmediate = global.clearTimeout;\n\t\n\t// Here we check if the arguments passed to setTimeout actually will be\n\t// passed to the callback, on older versions of IE(?) this check will fail\n\tglobal.setTimeout(function (arg) {\n\t\t// If the test fails, we wrap func in a closure that will invoke func w/\n\t\t// the arguments\n\t\targ || (attachTo.setImmediate = (func, ...params) => global.setTimeout(() => func(...params), 0));\n\t}, 0, true);\n}(this || window);"]}