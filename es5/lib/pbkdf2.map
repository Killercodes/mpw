{"version":3,"file":"/home/tom/git/mpw-js.gh/es5/lib/pbkdf2.js","sources":["/home/tom/git/mpw-js.gh/lib/pbkdf2.js","@traceur/generated/TemplateParser/0"],"names":[],"mappings":"AAMA,KAAK,OAAO,EAAI,CAAA,SAAS,AAAC;AAEzB,SAAS,UAAQ,CAAE,QAAO,CAAG,CAAA,IAAG,CAAG,CAAA,IAAG,CAAG,CAAA,MAAK,CAAG,CAAA,IAAG;AACnD,AAAI,MAAA,CAAA,OAAM,CAAC;AAEX,WAAQ,IAAG,KAAK,GAAK,KAAG;AACvB,SAAK,OAAK;AACT,cAAM,EAAI,CAAA,GAAE,EAAI,EAAA,CAAC;AACjB,aAAK;AAAA,AACN,SAAK,SAAO,CAAC;AACb,SAAK,UAAQ;AACZ,cAAM,EAAI,CAAA,GAAE,EAAI,EAAA,CAAC;AACjB,aAAK;AAAA,AACN,SAAK,SAAO,CAAC;AACb,SAAK,UAAQ;AACZ,cAAM,EAAI,CAAA,GAAE,EAAI,EAAA,CAAC;AACjB,aAAK;AAAA,AACN,SAAK,SAAO,CAAC;AACb,SAAK,UAAQ;AACZ,cAAM,EAAI,CAAA,GAAE,EAAI,EAAA,CAAC;AACjB,aAAK;AAAA,AACN,SAAK,SAAO,CAAC;AACb,SAAK,UAAQ;AACZ,cAAM,EAAI,CAAA,GAAE,EAAI,EAAA,CAAC;AACjB,aAAK;AAAA,AACN;AACC,aAAO,CAAA,OAAM,OAAO,AAAC,CAAC,GAAI,MAAI,AAAC,CAAC,uBAAsB,CAAC,CAAC,CAAC;AADnD,IAER;AAEA,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,CAAC,CAAC,MAAK,EAAI,QAAM,CAAA,CAAI,EAAA,CAAC,EAAI,QAAM,CAAC,EAAI,EAAA,CAAC;AAEtD,AAAI,MAAA,CAAA,IAAG,EAAQ,IAAI,WAAS,AAAC,CAAC,IAAG,OAAO,EAAI,EAAA,CAAmB,CAAC;AAChE,AAAI,MAAA,CAAA,QAAO,EAAI,IAAI,SAAO,AAAC,CAAC,IAAG,OAAO,CAAG,CAAA,IAAG,WAAW,CAAG,CAAA,IAAG,WAAW,CAAC,CAAC;AAE1E,OAAG,IAAI,AAAC,CAAC,IAAG,CAAC,CAAC;AAEd,SAAO,CAAA,MAAK,OAAO,OAAO,UAAU,AAAC,CAAC,KAAI,CAAG,SAAO,CAAG;AACrD,SAAG,CAAG,OAAK;AACX,SAAG,CAAG,KAAG;AAAA,IACV,CAAG,MAAI,CAAsB,EAAE,MAAK,CAAE,CAAC,KAAK,AAAC,CAAC,SAAU,GAAE;AACzD,AAAI,QAAA,CAAA,EAAC,EAAI,IAAI,WAAS,AAAC,CAAC,SAAQ,EAAI,QAAM,CAAC,CAAC;AAC5C,AAAI,QAAA,CAAA,CAAA,EAAI,CAAA,OAAM,QAAQ,AAAC,EAAC,CAAC;;AAGxB,QAAA,EAAI,CAAA,CAAA,KAAK,AAAC,EAAC,SAAA,AAAC;eAAK,CAAA,QAAO,UAAU,AAAC,CAAC,IAAG,OAAO,CAAG,MAAI,CAAG,MAAI,CAAe;QAAA,EAAC,KACvE,AAAC,EAAC,SAAA,AAAC;eAAK,CAAA,MAAK,OAAO,OAAO,KAAK,AAAC,CAAC;AACrC,eAAG,CAAG,OAAK;AACX,eAAG,CAAG,KAAG;AAAA,UACV,CAAG,IAAE,CAAG,KAAG,CAAC;QAAA,EAAC,KACT,AAAC,EAAC,SAAA,GAAE;eAAK,EAAC,EAAC,IAAI,AAAC,CAAC,GAAI,WAAS,AAAC,CAAC,GAAE,CAAC,CAAG,IAAE,CAAC,CAAG,IAAH,AAAK,CAAC;QAAA,EAAC,CAAC;AAEtD,mBAAa,EAAA,CAAG,CAAA,CAAA,GAAK,KAAG,CAAG,CAAA,CAAA,EAAE,CAAG;AAC/B,UAAA,EAAI,CAAA,CAAA,KAAK,AAAC,EAAC,SAAA,CAAA;iBAAK,CAAA,MAAK,OAAO,OAAO,KAAK,AAAC,CAAC;AACxC,iBAAG,CAAG,OAAK;AACX,iBAAG,CAAG,KAAG;AAAA,YACV,CAAG,IAAE,CAAG,EAAA,CAAC;UAAA,EAAC,KAAK,AAAC,CAAC,SAAU,CAAA;AAC1B,AAAI,cAAA,CAAA,EAAC,EAAI,IAAI,WAAS,AAAC,CAAC,CAAA,CAAC,CAAC;AAE1B,uBAAa,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,EAAC,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACnC,eAAC,CCjEQ,eAAc,WAAW,AAAC,CDiEhC,GAAE,EAAI,EAAA,CCjE4C,CAAC,GAA/D,CDiEwB,EAAC,CCjEP,eAAc,WAAW,AAAC,CDiEjB,CAAA,CCjEmC,CDiElC,ACjEmC,CDiElC;YACrB;AAAA,AAEA,iBAAO,EAAA,CAAC;UACT,CAAC,CAAC;QACJ;AAAA;AArBD,qBAAiB,EAAA;cAAS,EAAA,CAAG,CAAA,KAAI,GAAK,UAAQ,CAAG,CAAA,KAAI,EAAE,CAAG,CAAA,GAAE,GAAK,QAAM;;MAsBvE;AAEA,WAAO,CAAA,CAAA,KAAK,AAAC,EAAC,SAAA,AAAC;aAAK,CAAA,EAAC,SAAS,AAAC,CAAC,CAAA,CAAG,OAAK,CAAC;MAAA,EAAC,CAAC;IAC5C,CAAC,CAAC;EACJ;AAEA,KAAI,MAAK,OAAO,OAAO,CAAG;AACzB,SAAO,UAAU,QAAO,CAAG,CAAA,IAAG,CAAG,CAAA,IAAG,CAAG,CAAA,MAAK,CAAG,CAAA,IAAG;AACjD,AAAI,QAAA,CAAA,IAAG,EAAI,KAAG,CAAC;AACf,AAAI,QAAA,CAAA,IAAG,EAAI,UAAQ,CAAC;AAEpB,WAAO,CAAA,MAAK,OAAO,OAAO,UAAU,AAAC,CAAC,KAAI,CAAG,SAAO,CAAG;AACrD,WAAG,CAAG,SAAO;AACb,WAAG,CAAG,KAAG;AAAA,MACV,CAAG,MAAI,CAAsB,EAAE,YAAW,CAAE,CAAC,KACzC,AAAC,EAAC,SAAA,GAAE;aAAK,CAAA,MAAK,OAAO,OAAO,WAAW,AAAC,CAAC;AAC5C,aAAG,CAAG,SAAO;AACb,aAAG,CAAG,KAAG;AACT,mBAAS,CAAG,KAAG;AACf,aAAG,CAAG,KAAG;AAAA,QACV,CAAG,IAAE,CAAG,CAAA,MAAK,EAAI,EAAA,CAAC;MAAA,EAAC,KACf,AAAC,EAAC,SAAA,GAAE;aAAK,IAAI,WAAS,AAAC,CAAC,GAAE,CAAC;MAAA,EAAC,MAC3B,AAAC,EAAC,SAAA,GAAE;aAAK,CAAA,CAAC,GAAE,KAAK,IAAM,iBAAe,CAAC,EACzC,CAAA,CAAC,MAAK,OAAO,EAAI,UAAQ,CAAC,MAAM,AAAC,CAAC,IAAG,CAAG,KAAG,CAAC,CAAA,CAC5C,CAAA,OAAM,OAAO,AAAC,CAAC,GAAE,CAAC;MAAA,EAAC,CAAC;IACzB,CAAC;EACF,KAAO;AACN,SAAO,UAAU,QAAO,CAAG,CAAA,IAAG,CAAG,CAAA,IAAG,CAAG,CAAA,MAAK,CAAG,CAAA,IAAG;AACjD,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,QAAO,KAAK,CCnGX,eAAc,WAAW,AAAC,CDmGb,IAAG,KAAK,GAAK,KAAG,CCnGe,CAAC,GAA/D,CDmGqD,QAAO,KAAK,CCnG/C,eAAc,WAAW,AAAC,CDmGuB,CAAC,IAAG,KAAK,GAAK,KAAG,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAG,GAAC,CAAC,CCnGxC,CDmGyC,ACnGxC,CDmGyC;AAErG,SAAI,CAAC,OAAM,CAAG;AACb,aAAO,CAAA,OAAM,OAAO,AAAC,CAAC,GAAI,MAAI,AAAC,CAAC,uBAAsB,CAAC,CAAC,CAAC;MAC1D;AAAA,AAEA,WAAO,IAAI,QAAM,AAAC,CAAC,SAAU,OAAM,CAAG,CAAA,MAAK;AAI1C,aAAK,aAAa,AAAC,CAAC,SAAS,AAAC;AAE7B,iBAAO,EAAI,CAAA,QAAO,IAAI,UAAU,OAAO,AAAC,CAAC,QAAO,CAAC,CAAC;AAClD,aAAG,EAAQ,CAAA,QAAO,IAAI,UAAU,OAAO,AAAC,CAAC,IAAG,CAAC,CAAC;AAG9C,AAAI,YAAA,CAAA,IAAG,EAAI,CAAA,QAAO,OAAO,AAAC,CAAC,QAAO,CAAG,KAAG,CAAG;AAC1C,kBAAM,CAAG,CAAA,MAAK,EAAE,EAAA,CAAA,CAAE,GAAC;AACnB,qBAAS,CAAG,KAAG;AACf,iBAAK,CAAG,QAAM;AAAA,UACf,CAAC,CAAC;AAGF,AAAI,YAAA,CAAA,GAAE,EAAQ,IAAI,WAAS,AAAC,CAAC,IAAG,MAAM,OAAO,EAAI,EAAA,CAAkB,CAAC;AACpE,AAAI,YAAA,CAAA,OAAM,EAAI,IAAI,SAAO,AAAC,CAAC,GAAE,OAAO,CAAG,CAAA,GAAE,WAAW,CAAG,CAAA,GAAE,WAAW,CAAC,CAAC;AAGtE,qBAAa,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,IAAG,MAAM,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AAE3C,kBAAM,SAAS,AAAC,CAAC,CAAA,EAAI,EAAA,CChI3B,CDgI+C,IAAG,MAAM,CChItC,eAAc,WAAW,AAAC,CDgIc,CAAA,CChII,CAAC,CDgID,MAAI,CAAe,CAAC;UAC7E;AAAA,AAGA,gBAAM,AAAC,CAAC,GAAE,CAAC,CAAC;QACb,CAAC,CAAC;MACH,CAAC,CAAC;IACH,CAAC;EACF;AAAA,AACD,AAAC,EAAC,CAAC","sourceRoot":"/home/tom/git/mpw-js.gh/es5/lib/","sourcesContent":["/*! by Tom Thorogood <me@tomthorogood.co.uk> */\n/*! This work is licensed under the Creative Commons Attribution 4.0\nInternational License. To view a copy of this license, visit\nhttp://creativecommons.org/licenses/by/4.0/ or see LICENSE. */\n\n// https://bugzilla.mozilla.org/show_bug.cgi?id=554827\nwindow.pbkdf2 = function () {\n\t// https://github.com/golang/crypto/blob/master/pbkdf2/pbkdf2.go\n\tfunction pbkdf2_js(password, salt, iter, keyLen, hash) {\n\t\tlet hashLen;\n\t\t\n\t\tswitch (hash.name || hash) {\n\t\t\tcase \"SHA1\":\n\t\t\t\thashLen = 160 / 8;\n\t\t\t\tbreak;\n\t\t\tcase \"SHA224\":\n\t\t\tcase \"SHA-224\":\n\t\t\t\thashLen = 224 / 8;\n\t\t\t\tbreak;\n\t\t\tcase \"SHA256\":\n\t\t\tcase \"SHA-256\":\n\t\t\t\thashLen = 256 / 8;\n\t\t\t\tbreak;\n\t\t\tcase \"SHA384\":\n\t\t\tcase \"SHA-384\":\n\t\t\t\thashLen = 384 / 8;\n\t\t\t\tbreak;\n\t\t\tcase \"SHA512\":\n\t\t\tcase \"SHA-512\":\n\t\t\t\thashLen = 512 / 8;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn Promise.reject(new Error(\"Invalid argument hash\"));\n\t\t}\n\t\t\n\t\tlet numBlocks = ((keyLen + hashLen - 1) / hashLen) | 0;\n\t\t\n\t\tlet data     = new Uint8Array(salt.length + 4/*sizeof(uint32)*/);\n\t\tlet dataView = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\t\t\n\t\tdata.set(salt);\n\t\t\n\t\treturn window.crypto.subtle.importKey(\"raw\", password, {\n\t\t\t\tname: \"HMAC\",\n\t\t\t\thash: hash\n\t\t\t}, false/*not extractable*/, [ \"sign\" ]).then(function (key) {\n\t\t\t\tlet dk = new Uint8Array(numBlocks * hashLen);\n\t\t\t\tlet x = Promise.resolve();\n\t\t\t\t\n\t\t\t\tfor (let block = 1, dki = 0; block <= numBlocks; block++, dki += hashLen) {\n\t\t\t\t\tx = x.then(() => dataView.setUint32(salt.length, block, false/*big-endian*/))\n\t\t\t\t\t\t.then(() => window.crypto.subtle.sign({\n\t\t\t\t\t\t\tname: \"HMAC\",\n\t\t\t\t\t\t\thash: hash\n\t\t\t\t\t\t}, key, data))\n\t\t\t\t\t\t.then(pdk => (dk.set(new Uint8Array(pdk), dki), pdk));\n\t\t\t\t\t\n\t\t\t\t\tfor (let n = 2; n <= iter; n++) {\n\t\t\t\t\t\tx = x.then(U => window.crypto.subtle.sign({\n\t\t\t\t\t\t\t\tname: \"HMAC\",\n\t\t\t\t\t\t\t\thash: hash\n\t\t\t\t\t\t\t}, key, U)).then(function (U) {\n\t\t\t\t\t\t\t\tlet Ux = new Uint8Array(U);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor (let i = 0; i < Ux.length; i++) {\n\t\t\t\t\t\t\t\t\tdk[dki + i] ^= Ux[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn U;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn x.then(() => dk.subarray(0, keyLen));\n\t\t\t});\n\t}\n\t\n\tif (window.crypto.subtle) {\n\t\treturn function (password, salt, iter, keyLen, hash) {\n\t\t\tlet self = this;\n\t\t\tlet args = arguments;\n\t\t\t\n\t\t\treturn window.crypto.subtle.importKey(\"raw\", password, {\n\t\t\t\t\tname: \"PBKDF2\",\n\t\t\t\t\thash: hash\n\t\t\t\t}, false/*not extractable*/, [ \"deriveBits\" ])\n\t\t\t\t.then(key => window.crypto.subtle.deriveBits({\n\t\t\t\t\tname: \"PBKDF2\",\n\t\t\t\t\tsalt: salt,\n\t\t\t\t\titerations: iter,\n\t\t\t\t\thash: hash\n\t\t\t\t}, key, keyLen * 8))\n\t\t\t\t.then(key => new Uint8Array(key))\n\t\t\t\t.catch(err => (err.name === \"OperationError\")\n\t\t\t\t\t? (window.pbkdf2 = pbkdf2_js).apply(self, args)\n\t\t\t\t\t: Promise.reject(err));\n\t\t};\n\t} else {\n\t\treturn function (password, salt, iter, keyLen, hash) {\n\t\t\tlet hashAlg = CryptoJS.algo[hash.name || hash] || CryptoJS.algo[(hash.name || hash).replace(\"-\", \"\")];\n\t\t\t\n\t\t\tif (!hashAlg) {\n\t\t\t\treturn Promise.reject(new Error(\"Invalid argument hash\"));\n\t\t\t}\n\t\t\t\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t// setImmediate (a 0-delay setTimeout of sorts) is needed\n\t\t\t\t// here so that this code is asynchronous and will not block\n\t\t\t\t// the UI thread\n\t\t\t\twindow.setImmediate(function () {\n\t\t\t\t\t// Create crypto-js WordArrays from Uint8Arrays password and salt\n\t\t\t\t\tpassword = CryptoJS.lib.WordArray.create(password);\n\t\t\t\t\tsalt     = CryptoJS.lib.WordArray.create(salt);\n\t\t\t\t\t\n\t\t\t\t\t// Derive key using PBKDF2 w/ password and salt\n\t\t\t\t\tlet Ckey = CryptoJS.PBKDF2(password, salt, {\n\t\t\t\t\t\tkeySize: keyLen*8/32,\n\t\t\t\t\t\titerations: iter,\n\t\t\t\t\t\thasher: hashAlg\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// Create key array and a DataView representing it\n\t\t\t\t\tlet key     = new Uint8Array(Ckey.words.length * 4/*sizeof(int32)*/);\n\t\t\t\t\tlet keyView = new DataView(key.buffer, key.byteOffset, key.byteLength);\n\t\t\t\t\t\n\t\t\t\t\t// Loop over Ckey.words which are INT32\n\t\t\t\t\tfor (let i = 0; i < Ckey.words.length; i++) {\n\t\t\t\t\t\t// Set key[i*4,i*4+4] to Ckey.words[i] INT32 in big-endian form\n\t\t\t\t\t\tkeyView.setInt32(i * 4/*sizeof(int32)*/, Ckey.words[i], false/*big-endian*/);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Return the key Uint8Array\n\t\t\t\t\tresolve(key);\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t}\n}();","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]"]}